# https://pre-commit.com/
#
# Before first use: `pre-commit install`
# To run: `pre-commit run --all-files`
# To update: `pre-commit autoupdate`
#  - &flake8_dependencies below needs updated manually
ci:
  # See: https://pre-commit.ci/#configuration
  autofix_prs: false
  autoupdate_schedule: quarterly
  autoupdate_commit_msg: "chore: update pre-commit hooks"
  autofix_commit_msg: "style: pre-commit fixes"
  skip: [pylint, no-commit-to-branch]
fail_fast: true
default_language_version:
  python: python3
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      # - id: check-symlinks
      - id: check-ast
      - id: check-toml
      - id: check-yaml
      - id: check-executables-have-shebangs
      - id: check-vcs-permalinks
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: debug-statements
      - id: end-of-file-fixer
        exclude_types: [svg]
      - id: mixed-line-ending
      - id: trailing-whitespace
      - id: name-tests-test
        args: ["--pytest-test-first"]
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.23
    hooks:
      - id: validate-pyproject
        name: Validate pyproject.toml
  # I don't yet trust ruff to do what autoflake does
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args: [--in-place]
  # We can probably remove `isort` if we come to trust `ruff --fix`,
  # but we'll need to figure out the configuration to do this in `ruff`
  - repo: https://github.com/pycqa/isort
    rev: 6.0.0
    hooks:
      - id: isort
  # Let's keep `pyupgrade` even though `ruff --fix` probably does most of it
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        args: [--py310-plus]
  - repo: https://github.com/MarcoGorelli/auto-walrus
    rev: 0.3.4
    hooks:
      - id: auto-walrus
        args: [--line-length, "100"]
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
      - id: black-jupyter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.5
    hooks:
      - id: ruff
        args: [--fix-only, --show-fixes]
  # Let's keep `flake8` even though `ruff` does much of the same.
  # `flake8-bugbear` and `flake8-simplify` have caught things missed by `ruff`.
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args: ["--config=.flake8"]
        additional_dependencies:
          &flake8_dependencies # These versions need updated manually
          - flake8==7.1.1
          - flake8-bugbear==24.12.12
          - flake8-simplify==0.21.0
  - repo: https://github.com/asottile/yesqa
    rev: v1.5.0
    hooks:
      - id: yesqa
        additional_dependencies: *flake8_dependencies
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        types_or: [python, rst, markdown]
        additional_dependencies: [tomli]
        files: ^(graphblas|docs)/
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.5
    hooks:
      - id: ruff
  - repo: https://github.com/sphinx-contrib/sphinx-lint
    rev: v1.0.0
    hooks:
      - id: sphinx-lint
        args: [--enable, all, "--disable=line-too-long,leaked-markup"]
  # `pyroma` may help keep our package standards up to date if best practices change.
  # This is probably a "low value" check though and safe to remove if we want faster pre-commit.
  - repo: https://github.com/regebro/pyroma
    rev: "4.2"
    hooks:
      - id: pyroma
        args: [-n, "10", .]
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: "v0.10.0.1"
    hooks:
      - id: shellcheck
  - repo: https://github.com/rbubley/mirrors-prettier
    rev: v3.4.2
    hooks:
      - id: prettier
  - repo: https://github.com/ComPWA/taplo-pre-commit
    rev: v0.9.3
    hooks:
      - id: taplo-format
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.31.1
    hooks:
      - id: check-dependabot
      - id: check-github-workflows
      - id: check-readthedocs
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
  - repo: https://github.com/woodruffw/zizmor-pre-commit
    rev: v1.3.1
    hooks:
      - id: zizmor
  - repo: meta
    hooks:
      - id: check-hooks-apply
      - id: check-useless-excludes
  - repo: local
    hooks:
      # Add `--hook-stage manual` to pre-commit command to run (very slow)
      # It's probably better (and faster!) to simply run `pylint graphblas/some/file.py`
      - id: pylint
        name: pylint
        entry: pylint
        language: system
        types: [python]
        stages: [manual]
        args: [graphblas/]
        pass_filenames: false
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: no-commit-to-branch # no commit directly to main
#
# Maybe:
#
#  - repo: https://github.com/rstcheck/rstcheck
#    rev: v6.1.1
#    hooks:
#      - id: rstcheck
#        additional_dependencies: [nbsphinx]
#
#  - repo: https://github.com/PyCQA/pydocstyle
#    rev: 6.3.0
#    hooks:
#      - id: pydocstyle
#        additional_dependencies: [tomli]
#
#  - repo: https://github.com/PyCQA/bandit
#    rev: 1.7.4
#    hooks:
#      - id: bandit
#
# blacken-docs, blackdoc, mypy, pydocstringformatter, velin, flynt
